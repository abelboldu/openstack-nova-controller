---

- hosts: all
  become: True

  pre_tasks:
    - name: Set facts for mysql role on Debian based system
      set_fact:
        mysql_daemon: 'mysql'
        mysql_log_error: '/var/log/mysql/error.log'
        mysql_pid_file: '/var/run/mysqld/mysqld.pid'
        mysql_packages:
          - 'mariadb-client'
          - 'mariadb-server'
          - 'python-mysqldb'
      when: ansible_os_family == 'Debian'

    - name: Set facts for mysql role on RedHat based system
      set_fact:
        mysql_daemon: 'mariadb'
        mysql_socket: '/var/lib/mysql/mysql.sock'
        mysql_log_error: '/var/log/mariadb/mariadb.log'
        mysql_syslog_tag: 'mariadb'
        mysql_pid_file: '/var/run/mariadb/mariadb.pid'
      when: ansible_os_family == 'RedHat'

    - name: Update local apt cache (Ubuntu)
      apt:
        update_cache: True
      changed_when: False
      when: ansible_os_family == 'Debian'

    - name: Install policycoreutils-python
      yum:
        name: 'policycoreutils-python'
        state: present
      when: ansible_os_family == 'RedHat'

    # Workaround for selinux errors when using sqlite DB
    - name: Set permissive SElinux for httpd domain
      selinux_permissive:
        name: 'httpd_t'
        permissive: True
      when:
        - ansible_selinux
        - ansible_virtualization_type != 'docker'

  roles:
    - openstack-repo
